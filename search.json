[{"title":"《机器人控制系统和MATLAB Simulink仿真》笔记1-两关节机械臂PD控制（不考虑重力）","path":"/2023/04/05/《机器人控制系统和MATLAB-Simulink仿真》笔记1-两关节机械臂PD控制（不考虑重力）/","content":"前言 最近在看控制的东西，想动手实践一下，看到有书名曰《机器人控制系统和MATLAB simulink仿真》，于是学习一下做做记录，也丰富自己对控制和动力学的理解。 二关节机械臂的动力学推导书上给出了不考虑重力的动力学公式为： 这里的$p_1$、$p_2$、$p_3$、$q_1$、$q_2$都是什么东西？写得不清不楚的，不过推导动力学用拉格朗日是传统艺能了，我们就来推导一下。 不考虑重力、摩擦力和干扰，那我们就不用考虑系统的势能了。 作为一个二关节机械臂，我们认为连杆的质量都集中在末端,旋转关节都在始端，两个旋转关节的旋转角度分别如图旋转$\\theta_1$和$\\theta_2$，我们取它们作为广义坐标。 从基座如图建立平面坐标系，我们可以写出每个连杆末端旋转副的位置.第一个连杆$X$方向和$Y$方向的坐标为： $$\\begin{aligned}&amp;x_1&#x3D;l_1\\cos\\theta_1\\&amp;y_1&#x3D;l_1\\sin\\theta_1\\end{aligned}$$ 第二个连杆$X$方向和$Y$方向的坐标为： $$\\begin{aligned}&amp;x_2&#x3D;l_1\\cos\\theta_1+l_2\\cos(\\theta_1+\\theta_2)\\&amp;y_2&#x3D;l_1\\sin\\theta_1+l_2\\sin(\\theta_1+\\theta_2)\\end{aligned}$$ 第一个连杆$X$方向和$Y$方向的速度（对时间求导）为： $$\\begin{aligned}&amp;\\dot{x}_1&#x3D;-l_1\\sin\\theta_1,\\dot{\\theta_1}\\&amp;\\dot{y}_1&#x3D;l_1\\cos\\theta_1,\\dot{\\theta_1}\\end{aligned}$$ 第二个连杆$X$方向和$Y$方向的速度（对时间求导）为： $$\\begin{aligned}&amp;\\dot{x}_2&#x3D;-l_1\\sin\\theta_1,\\dot{\\theta_1}-l_2\\sin(\\theta_1+\\theta_2)(\\dot{\\theta_1}+\\dot{\\theta_2})\\&amp;\\dot{y}_2&#x3D;l_1\\cos\\theta_1,\\dot{\\theta_1}+l_2\\cos(\\theta_1+\\theta_2)(\\dot{\\theta_1}+\\dot{\\theta_2})\\end{aligned}$$ 第一个连杆的动能： $$\\begin{aligned}T_1&amp;&#x3D;\\frac{1}{2}m_1(\\dot{x}_1^2+\\dot{y}_1^2)\\&amp;&#x3D;\\frac{1}{2}m_1\\left[\\left(-l_1\\sin\\theta_1,\\dot{\\theta_1}\\right)^2+\\left(l_1\\cos\\theta_1,\\dot{\\theta_1}\\right)^2\\right]\\&amp;&#x3D;\\frac{1}{2}m_1l_1^2\\dot{\\theta}_1^2\\end{aligned}$$ 第二个连杆的动能： $$\\begin{aligned}T_2&amp;&#x3D;\\frac{1}{2}m_2(\\dot{x}_2^2+\\dot{y}_2^2)\\&amp;&#x3D;\\frac{1}{2}m_2\\Biggr{\\left[-l_1\\sin\\theta_1,\\dot{\\theta_1}-l_2\\sin(\\theta_1+\\theta_2)(\\dot{\\theta_1}+\\dot{\\theta_2})\\right]^2\\&amp;\\quad +\\left[l_1\\cos\\theta_1,\\dot{\\theta_1}+l_2\\cos(\\theta_1+\\theta_2)(\\dot{\\theta_1}+\\dot{\\theta_2}))\\right]^2\\Biggr}\\&amp;&#x3D;\\frac{1}{2}m_2\\left[l_1^2\\dot{\\theta}_1^2+l_2^2(\\dot{\\theta}_1+\\dot{\\theta}_2)^2+2l_1l_2\\dot{\\theta}_1(\\dot{\\theta}_1+\\dot{\\theta}_2)\\cos\\theta_2\\right]\\end{aligned}$$ 由于不考虑重力、摩擦力和干扰，于是系统的总能量就是两个动能之和，记作$L$。 $$\\begin{aligned}L&amp;&#x3D;T_1+T_2\\&amp;&#x3D;\\frac{1}{2}m_1l_1^2\\dot{\\theta}_1^2+\\frac{1}{2}m_2\\left[l_1^2\\dot{\\theta}_1^2+l_2^2(\\dot{\\theta}_1+\\dot{\\theta}_2)^2+2l_1l_2\\dot{\\theta}_1(\\dot{\\theta}_1+\\dot{\\theta}_2)\\cos\\theta_2\\right]\\&amp;&#x3D;\\frac{1}{2}m_1l_1^2\\dot{\\theta}_1^2+\\frac{1}{2}m_2l_1^2\\dot{\\theta}_1^2+\\frac{1}{2}m_2l_2^2\\dot{\\theta}_1^2+m_2l_2^2\\dot{\\theta}_1\\dot{\\theta}_2+\\frac{1}{2}m_2l_2^2\\dot{\\theta}_2^2+m_2l_1l_2(\\dot{\\theta}_1^2+\\dot{\\theta}_1\\dot{\\theta}_2)\\cos\\theta_2\\end{aligned}$$ 机器人在连杆1和连杆2的驱动关节力矩分别是$\\tau_1$和$\\tau_2$，利用拉格朗日公式有： $$\\begin{aligned} &amp;\\frac{d}{dt}\\left(\\frac{\\partial L}{\\partial \\dot{\\theta_1}}\\right)-\\frac{\\partial L}{\\partial \\theta_1}&#x3D;\\tau_1\\ &amp;\\frac{d}{dt}\\left(\\frac{\\partial L}{\\partial \\dot{\\theta_2}}\\right)-\\frac{\\partial L}{\\partial \\theta_2}&#x3D;\\tau_2\\end{aligned}$$ 代入上面的公式有： $$\\begin{aligned} \\frac{d}{dt}\\left(\\frac{\\partial L}{\\partial \\dot{\\theta_1}}\\right)&#x3D;&amp;m_1l_1^2\\ddot{\\theta_1}+m_2l_1^2\\ddot{\\theta}_1+m_2l_2^2\\ddot{\\theta}_1+m_2l_2^2\\ddot{\\theta}_2\\&amp;+2m_2l_1l_2\\cos\\theta_2,\\ddot{\\theta}_1-2m_2l_1l_2\\sin\\theta_2,\\dot{\\theta}_1\\dot{\\theta}_2\\&amp;+m_2l_1l_2\\cos\\theta_2,\\ddot{\\theta}_2-m_2l_1l_2\\sin\\theta_2,\\dot{\\theta}_2^2\\\\end{aligned}$$ $$\\begin{aligned} \\frac{d}{dt}\\left(\\frac{\\partial L}{\\partial \\dot{\\theta_2}}\\right)&#x3D;&amp;m_2l_2^2\\ddot{\\theta}_1+m_2l_2^2\\ddot{\\theta}_2+m_2l_1l_2\\cos\\theta_2,\\ddot{\\theta}_1\\&amp;-m_2l_1l_2\\sin\\theta_2,\\dot{\\theta}_1\\dot{\\theta}_2\\\\end{aligned}$$ $$\\begin{aligned} \\frac{\\partial L}{\\partial \\theta_1}&#x3D;0\\end{aligned}$$ $$\\begin{aligned} \\frac{\\partial L}{\\partial \\theta_2}&#x3D;m_2l_1l_2\\dot{\\theta}_1^2\\sin\\theta_2+m_2l_1l_2\\dot{\\theta}_1\\dot{\\theta}_2\\sin\\theta_2\\end{aligned}$$ 整理以后我们就有： $$\\begin{aligned} &amp;(m_1l_1^2+m_2l_1^2+m_2l_2^2+2m_2l_1l_2\\cos\\theta_2)\\ddot{\\theta}_1+(m_2l_1l_2\\cos\\theta_2+m_2l_2^2)\\ddot{\\theta}_2\\&amp;-2m_2l_1l_2\\sin\\theta_2\\dot{\\theta}_1\\dot{\\theta}_2-m_2l_1l_2\\sin\\theta_2\\dot{\\theta}_2^2&#x3D;\\tau_1\\end{aligned}$$ $$\\begin{aligned} &amp;(m_2l_1l_2\\cos\\theta_2+m_2l_2^2)\\ddot{\\theta}_1+m_2l_2^2\\ddot{\\theta}_2+m_2l_1l_2\\sin\\theta_2\\dot{\\theta}_1^2&#x3D;\\tau_2\\end{aligned}$$ 于是我们就可以写成书中的形式，描述为矩阵非常简洁的形式： $$\\begin{aligned} \\mathbf{D(q)\\ddot{q}+C(q,\\dot{q})\\dot{q}}&#x3D;\\bm{\\tau}\\end{aligned}$$ 其中： $$\\mathbf{D(q)}&#x3D;\\begin{bmatrix} m_1l_1^2+m_2l_1^2+m_2l_2^2+2m_2l_1l_2\\cos\\theta_2 &amp; m_2l_1l_2\\cos\\theta_2+m_2l_2^2\\ m_2l_1l_2\\cos\\theta_2+m_2l_2^2 &amp; m_2l_2^2\\end{bmatrix}$$ $$\\mathbf{C(q,\\dot{q})}&#x3D;\\begin{bmatrix} -m_2l_1l_2\\sin\\theta_2\\dot{\\theta}_2 &amp; -m_2l_1l_2\\sin\\theta_2\\dot{\\theta}_1-m_2l_1l_2\\sin\\theta_2\\dot{\\theta}_2\\ m_2l_1l_2\\sin\\theta_2\\dot{\\theta}_1 &amp; 0\\end{bmatrix}$$ $$\\mathbf{q}&#x3D;\\begin{bmatrix} \\theta_1\\ \\theta_2\\end{bmatrix}\\quad \\dot{\\mathbf{q}}&#x3D;\\begin{bmatrix} \\dot{\\theta}_1\\ \\dot{\\theta}_2\\end{bmatrix}\\quad \\bm{\\tau}&#x3D;\\begin{bmatrix} {\\tau}_1\\ {\\tau}_2\\end{bmatrix}$$ 这也就解释了开头书中的公式： 其中 $$\\begin{aligned} p_1&amp;&#x3D;m_1l_1^2+m_2l_1^2\\ p_2&amp;&#x3D;m_2l_2^2\\ p_2&amp;&#x3D;m_2l_1l_2\\end{aligned}$$"},{"path":"/2023/04/02/Markdown style/xiaolai/","content":".markdown-here-wrapper { font-size: 16px; line-height: 1.8em; letter-spacing: 0.1em; } pre, code { font-size: 14px; font-family: Roboto, 'Courier New', Consolas, Inconsolata, Courier, monospace; margin: auto 5px; } code { white-space: pre-wrap; border-radius: 2px; display: inline; } pre { font-size: 15px; line-height: 1.4em; display: block; !important; } pre code { white-space: pre; overflow: auto; border-radius: 3px; padding: 1px 1px; display: block !important; } strong, b{ color: #BF360C; } em, i { color: #009688; } hr { border: 1px solid #BF360C; margin: 1.5em auto; } p { margin: 1.5em 5px !important; } table, pre, dl, blockquote, q, ul, ol { margin: 10px 5px; } ul, ol { padding-left: 15px; } li { margin: 10px; } li p { margin: 10px 0 !important; } ul ul, ul ol, ol ul, ol ol { margin: 0; padding-left: 10px; } ul { list-style-type: circle; } dl { padding: 0; } dl dt { font-size: 1em; font-weight: bold; font-style: italic; } dl dd { margin: 0 0 10px; padding: 0 10px; } blockquote, q { border-left: 2px solid #009688; padding: 0 10px; color: #777; quotes: none; margin-left: 1em; } blockquote::before, blockquote::after, q::before, q::after { content: none; } h1, h2, h3, h4, h5, h6 { margin: 20px 0 10px; padding: 0; font-style: bold !important; color: #009688 !important; text-align: center !important; margin: 1.5em 5px !important; padding: 0.5em 1em !important; } h1 { font-size: 24px !important; border-bottom: 1px solid #ddd !important; } h2 { font-size: 20px !important; border-bottom: 1px solid #eee !important; } h3 { font-size: 18px; } h4 { font-size: 16px; } table { padding: 0; border-collapse: collapse; border-spacing: 0; font-size: 1em; font: inherit; border: 0; margin: 0 auto; } tbody { margin: 0; padding: 0; border: 0; } table tr { border: 0; border-top: 1px solid #CCC; background-color: white; margin: 0; padding: 0; } table tr:nth-child(2n) { background-color: #F8F8F8; } table tr th, table tr td { font-size: 16px; border: 1px solid #CCC; margin: 0; padding: 5px 10px; } table tr th { font-weight: bold; color: #eee; border: 1px solid #009688; background-color: #009688; }"},{"path":"/2023/04/02/Markdown style/rainbow/","content":"/* fonts initalization */ @import url(https://fonts.googleapis.com/css2?family=Source+Code+Pro&display=swap); @import url(https://fonts.googleapis.com/css2?family=Noto+Sans+SC:wght@500&display=swap); @font-face { font-family: \"Source Code Pro Regular\"; src: url(./rainbow/SourceCodePro-Regular.ttf); } @font-face { font-family: \"Noto Sans SC Medium\"; src: url(./rainbow/NotoSansSC-Medium.otf); } @page { size: A4; margin: 8mm 0mm; } /* root variables including colors, font-familys and a shadow style */ :root { --h-border-color: rgb(255, 191, 191); --h-bg-color: rgb(255, 232, 232); --table-border-color: rgb(255, 235, 211); --th-bg-color: rgb(255, 243, 228); --tr-bg-color: rgb(255, 249, 242); --tr-hover-bg-color: rgb(254, 255, 230); --code-bg-color: rgb(247, 247, 247); --del-color: rgb(151, 151, 151); --selection-bg-color: rgb(235, 227, 255); --block-shadow: 0.15rem 0.15rem 0.5rem rgb(150, 150, 150); --sans-serif-font: \"Noto Sans SC Medium\", \"Noto Sans SC\", sans-serif; --monospace-font: \"Source Code Pro Regular\", \"Source Code Pro\", monospace; } html { font-size: 16px; } #write { font-family: var(--sans-serif-font); max-width: 60rem; padding-left: 2rem; padding-right: 2rem; } /* yaml header settings */ #write pre.md-meta-block { font-family: var(--monospace-font); font-size: 1rem; text-align: left; padding: 0.6rem; color: rgb(134, 134, 134); background-color: var(--code-bg-color); border-radius: 0.4rem; } /* headers settings */ #write h1 { font-size: 2.2rem; text-align: center; text-shadow: 0.15rem 0.15rem 0.3rem rgb(187, 187, 187); } #write h2 { font-size: 1.8rem; margin-top: 1.8rem; margin-left: -1.5rem; margin-right: -1.5rem; background-color: var(--h-bg-color); padding-left: 1rem; padding-right: 1rem; border-left: 0.5rem solid var(--h-border-color); border-radius: 0.4rem; } #write h3 { font-size: 1.6rem; text-decoration: underline double var(--h-border-color) 0.15rem; } #write h4 { text-decoration: underline dotted var(--h-border-color) 0.2rem; } /* tables settings */ #write table { border-collapse: collapse; border: 0.25rem solid var(--table-border-color); } #write table th { background-color: var(--th-bg-color); } #write table th, td { text-align: center; border: 0.13rem dashed var(--table-border-color); padding: 0.5rem; } #write table tr:nth-child(even) { background-color: var(--tr-bg-color); } #write table tr:hover { background-color: var(--tr-hover-bg-color); } /* checkboxes settings */ #write .task-list-item input[type = \"checkbox\"] { width: 0; height: 0; } #write .task-list-item input[type = \"checkbox\"]::before, #write input[type = \"checkbox\"]:checked::before { content: \"\"; display: inline-block; vertical-align: middle; position: relative; left: -0.15rem; top: -0.41rem; width: 0.8rem; height: 0.8rem; border: 0.08rem solid var(--del-color); border-radius: 50%; transition: all 0.2s; } #write .task-list-item input[type = \"checkbox\"]:checked::before { padding: 0.12rem; background-clip: content-box; background-color: black; } #write .task-list-item input[type = \"checkbox\"]:checked + p { text-decoration: line-through; color: var(--del-color); } #write input[type='checkbox']:hover::before { transition: all 0.2s; background-color: rgb(228, 228, 228); } /* blockquotes settings */ #write blockquote { color:rgb(102, 102, 102); border-left: 0.25rem solid rgb(169, 202, 255); padding: 0.5rem 1rem 0.6rem 1rem; } #write blockquote::before { display: block; height: 2rem; width: 1.5rem; content: \"🌈\"; font-size: 1.2rem; } /* horizontal rules settings */ #write hr { margin-top: 2rem; margin-bottom: 2rem; background-color: rgb(226, 226, 226); height: 0.13rem; border: 0; } #write p { font-size: 1rem; line-height: 1.6rem; } /* code blocks settings */ #write .md-fences { font-family: var(--monospace-font); font-size: 1rem; padding: 0.6rem; background-color: var(--code-bg-color); border-radius: 0.4rem; box-shadow: var(--block-shadow); } #write .cm-s-inner .CodeMirror-gutters { border: none; } #write .cm-s-inner .CodeMirror-linenumber { color: rgb(212, 212, 212); } #write .cm-s-inner .cm-keyword { color: rgb(204, 35, 35); } #write .cm-s-inner .cm-number { color: rgb(27, 57, 226); } #write .cm-s-inner .cm-def { color: rgb(146, 50, 255); } #write .cm-s-inner .cm-operator { color: rgb(204, 35, 35); } #write .cm-s-inner .cm-variable2 { color: rgb(38, 129, 219); } #write .cm-s-inner .cm-variable3 { color: rgb(204, 35, 35); } #write .cm-s-inner .cm-comment { color: rgb(18, 129, 18); } #write .cm-s-inner .cm-string { color: rgb(18, 129, 18); } #write .cm-s-inner .cm-builtin { color: rgb(218, 135, 12); } #write .cm-tag { color: rgb(139, 10, 10); } /* formulas settings */ #write mjx-container { font-size: 1.1rem; } /* tooltips settings */ #write .code-tooltip { box-shadow: 0.1rem 0.1rem 0.2rem rgb(150, 150, 150); border-radius: 0.2rem; margin-top: 0.3rem; } /* selected texts in code blocks settings */ #write .CodeMirror-selected, #write .CodeMirror-selectedtext, #write .in-text-selection { background-color: var(--selection-bg-color) !important; } /* diagrams settings */ #write pre[lang=’sequence’], #write pre[lang=’flow’], #write pre[lang=’mermaid’] { background-color: var(--code-bg-color); border-radius: 0.4rem; box-shadow: var(--block-shadow); } /* inline codes settings */ #write code { font-family: var(--monospace-font); margin-left: 0.25rem; margin-right: 0.25rem; padding: 0.05rem 0.3rem; background-color: var(--code-bg-color); border-radius: 0.4rem; box-shadow: 0.13rem 0.13rem 0.26rem rgb(197, 197, 197); } /* urls settings */ #write a { color: rgb(31, 117, 255); } #write a:hover { color: rgb(108, 164, 255); } /* images settings */ #write img { display: block; margin: 0 auto; border: 0; border-radius: 5px; box-shadow: var(--block-shadow); } /* highlights settings */ #write mark { background-color: rgb(252, 255, 200); } /* deletes settings */ #write del { color: var(--del-color); } /* selected texts settings */ #write ::selection { background-color: var(--selection-bg-color); }"},{"path":"/2023/04/02/Markdown style/lanyue/","content":"/* fonts initalization */ @import url(https://fonts.googleapis.com/css2?family=Source+Code+Pro&display=swap); @import url(https://fonts.googleapis.com/css2?family=Noto+Sans+SC:wght@500&display=swap); @font-face { font-family: \"Source Code Pro Regular\"; src: url(./lanyue/SourceCodePro-Regular.ttf); } @font-face { font-family: \"Noto Sans SC Medium\"; src: url(./lanyue/NotoSansSC-Medium.otf); } @page { size: A4; margin: 8mm 0mm; } /* 核心配置区 */ :root { /* 字体 */ --sans-serif-font: \"Noto Sans SC Medium\", \"Noto Sans SC\", sans-serif; --monospace-font: \"Source Code Pro Regular\", \"Source Code Pro\", monospace; /* 基础颜色区：供宏观配置区使用，不可直接由专项配置区或具体元素使用 */ --color-black-light: #969696; --color-black-deep: #333333; --color-black: #000000; --color-red: #FF0000; --color-yellow: #ffff00; --color-gray-light: #d3d3d3; --color-gray: #c0c0c0; --color-gray-deep: #a9a9a9; --color-gray-most: #808080; --color-white: #FFFFFF; --color-white-snow: #fffafa; --color-white-honey: #f0fff0; --color-white-ice: #f5fffa; --color-white-azure: #f0ffff; --color-white-mi: #fffff0; --color-blue: #04BAFB; --color-blue-tiny: #F5FDFD; --color-blue-light: #D6FCFD; --color-blue-deep: #ADE8FD; --color-green-deep: #282C34; /* 宏观配置区：供专项配置区使用，不可由具体元素直接调用 此区域为用户自定义主题全局配置区域 =============================本文件内，只允许修改被本分割线包围的配色方案，不同的配色方案会有不同的主题效果；变量具体的实际意义可根据英文翻译合理猜理解；其余内容禁止修改=============================*/ --color-context-background: var(--color-white); --color-context-text: var(--color-black-deep); --color-menu-background: var(--color-white-ice); --color-menu-outline-text: var(--color-black); --color-menu-file-list-text: var(--color-black); --color-aux-one: var(--color-blue); --color-aux-two: var(--color-blue-light); --color-code: var(--color-white); --color-code-background: var(--color-green-deep); --color-shadow: var(--color-black-light); --color-reference: var(--color-gray-deep); --color-placeholder: var(--color-blue-deep); --color-mark: var(--color-yellow); --color-del: var(--color-red); /* 主题二 */ /* --color-aux-one: #14B6F6; --color-aux-two: #85E0FF; --color-context-background: #DAF5FF; --color-context-text: #000000; --color-menu-background: #85E0FF; --color-menu-outline-text: #000000; --color-menu-file-list-text: #96959E; --color-code: #96959E; --color-code-background: var(--color-green-deep); --color-shadow: var(--color-black-light); --color-reference: var(--color-gray-deep); --color-placeholder: var(--color-menu-outline-text); --color-mark: var(--color-yellow); --color-del: var(--color-red); */ /* ========================================================== */ /* 专项配置区：供具体元素直接调用 */ --context-background-color: var(--color-context-background); --context-text-color: var(--color-context-text); --menu-background-color: var(--color-menu-background); --menu-outline-text-color: var(--color-menu-outline-text); --menu-file-list-text-color: var(--color-menu-file-list-text); --active-file-bg-color: var(--selection-color); --active-file-border-color: var(--border-color); --active-file-text-color: var(--selection-menu-file-color); --h-sign: var(--color-aux-one); --h-sign-aux: var(--color-aux-two); --table-border-color: var(--border-color); --tr-bg-color: var(--color-aux-two); --tr-hover-bg-color: var(--selection-background-color); --th-bg-color: var(--color-aux-two); --selection-color: var(--color-context-background); --selection-background-color: var(--color-aux-one); --selection-menu-file-color: var(--color-aux-one); --selection-bg-color: var(--selection-background-color); --selection-text-color: var(--selection-color); --select-text-bg-color: var(--selection-background-color); --select-text-font-color: var(--selection-color); --search-select-background-color: var(--menu-background-color); --search-select-text-color: var(--color-aux-two); --search-select-background-hover-color: var(--color-context-background); --search-select-text-hover-color: var(--color-aux-one); /* 特有属性，typora直接支持：内容区搜索当前选中背景 */ --search-select-bg-color: var(--selection-background-color); --split-color: var(--color-aux-two); --scrollbar-color : var(--color-aux-two); --scrollbar-hover-color: var(--color-aux-one); --a-color: var(--selection-color); --a-hover-color: var(--selection-background-color); --mark-color: var(--color-yellow); --del-color: var(--color-red); --code-background-color: var(--color-code-background); --code-color: var(--color-code); --border-color: var(--color-aux-one); --shadow-color: var(--color-shadow); --reference-color: var(--color-reference); --placeholder-color: var(--color-placeholder); --block-shadow: 0.15rem 0.15rem 0.5rem var(--color-shadow); } html { font-size: 16px; background-color: var(--context-background-color); color: var(--context-text-color); } /* 写区 */ #write { background-color: var(--context-background-color); color: var(--context-text-color); } /* 导航栏区 与 写区 的分界线 */ #typora-sidebar-resizer { background-color: var(--menu-background-color); color: var(--menu-background-color); } /* 导航区 / 侧栏 */ #typora-sidebar { background-color: var(--menu-background-color); color: var(--menu-outline-text-color); } /* 导航栏 / 侧栏 大纲区 */ #sidebar-content { background-color: var(--menu-background-color); color: var(--menu-outline-text-color); } /* 导航栏文件列表样式 */ #file-library-list-children { border-bottom: 1px solid var(--split-color); color: var(--menu-file-list-text-color); background-color: var(--menu-background-color); } /* 隐藏导航栏文件列表中的每个文件的详细信息 */ .file-list-item-summary { display: none; visibility: hidden; } /* 设置大纲内容被选中的颜色 */ .outline-item-active { color: var(--selection-background-color); } /* 导航栏大纲切换样式 */ #info-panel-tab-outline { color: var(--selection-background-color); } /* 导航栏文件切换样式 */ #info-panel-tab-file { color: var(--selection-background-color); } /* 导航栏从文件鼠标滚动至文件查找样式 */ #info-panel-tab-search { color: var(--selection-background-color); } /* 导航栏搜索框外围 */ #file-library-search { height: 60px; } /* 导航栏搜索输入框外围 */ #file-library-search-panel { margin-top:10px; } /* 隐藏导航栏搜索框的关闭按钮 */ #close-outline-filter-btn { display: none; visibility: hidden; } /* 导航栏搜索输入框 */ #file-library-search-input { outline-style: none ; border: 1px solid var(--selection-background-color); border-radius: 5px; padding: 15px 15px; color: var(--search-select-text-color); background: var(--search-select-background-color); } #file-library-search-input:focus{ background-color: var(--search-select-background-hover-color); color: var(--search-select-text-hover-color); border-color: var(--border-color); outline: 0; -webkit-box-shadow: inset 0 0px 6px var(--border-color),0 0 6px var(--border-color); box-shadow: inset 0 0px 6px var(--border-color),0 0 6px var(--border-color); } /* 导航栏搜索框提示语字体样式 */ input::-webkit-input-placeholder { color: var(--placeholder-color); } /* 内容区（写区）全局搜索集体选中（非当前选中）样式 */ .md-search-hit { color: var(--menu-outline-text-color); background-color: var(--selection-background-color); } #write { font-family: var(--sans-serif-font); max-width: 60rem; padding-left: 2rem; padding-right: 2rem; } /* 鼠标悬浮在导航栏任意菜单上后菜单的样式 */ .outline-item:hover { color: var(--selection-background-color); background-color: var(--menu-background-color); } /* 去掉 鼠标悬浮时导航栏的下划线 */ .outline-label:hover { text-decoration: none; } /* yaml header settings YAML Front Matter YAML YAML是YAML Ain't Markup Language递归缩写，即YAML不是标记语言的意思 YAML是便于人阅读基于unicode编码的各种语言的序列号标准。它的用途广泛，用于配置文件，日志文件，跨语言数据共享，对象持久化，复杂的数据结构 Front Matter 前言；前文部分 在YAML Front Matter中可以表明文章的信息（方便各种语言获取），设置一些环境中的格式，定义一些变量，甚至自定义一些变量（方便在不同语言环境下，达到想要的效果） */ #write pre.md-meta-block { font-family: var(--monospace-font); font-size: 1rem; text-align: left; padding: 0.6rem; color: var(--code-color); background-color: var(--code-background-color); border-radius: 0.4rem; } /* headers settings */ #write h1 { font-size: 2.2rem; text-align: center; text-shadow: 0.15rem 0.15rem 0.3rem var(--shadow-color); } #write h2 { font-size: 1.8rem; margin-top: 1.8rem; margin-left: -1.5rem; margin-right: -1.5rem; background-color: var(--h-sign-aux); padding-left: 1rem; padding-right: 1rem; border-left: 0.5rem solid var(--h-sign); border-right: 0.5rem solid var(--h-sign); /*指定背景为椭圆*/ border-radius: 0.4rem; } #write h3 { margin-left: 0rem; font-size: 1.6rem; } h3:before { /*标题左边logo中的文本*/ content: \"*\"; text-align: center; /*设置 logo 垂直居中 要与字体高度一致方可*/ line-height: 1.6rem; /*确保标题和logo在同一行*/ display: inline-block; /*标题与logo间距*/ margin-right: 0.2em; width: 1.6rem; height: 1.6rem; color: var(--h-sign); background: var(--h-sign); } #write h4 { margin-left: 1rem; font-size: 1.5rem; } h4:before { /*标题左边logo中的文本*/ content: \"*\"; text-align: center; /*设置 logo 垂直居中 要与字体高度一致方可*/ line-height: 1.5rem; /*确保标题和logo在同一行*/ display: inline-block; /*标题与logo间距*/ margin-right: 0.2em; /*border-radius: 50%;*/ width: 1.5rem; height: 1.5rem; color: var(--h-sign-aux); background: var(--h-sign-aux); } #write h5 { margin-left: 2rem; font-size: 1.4rem; } h5:before { /*标题左边logo中的文本*/ content: \"*\"; text-align: center; /*设置 logo 垂直居中 要与字体高度一致方可*/ line-height: 1.4rem; /*确保标题和logo在同一行*/ display: inline-block; /*标题与logo间距*/ margin-right: 0.2em; border-radius: 50%; width: 1.4rem; height: 1.4rem; color: var(--h-sign); background: var(--h-sign); } #write h6 { margin-left: 3rem; font-size: 1.3rem; } h6:before { /*标题左边logo中的文本*/ content: \"*\"; text-align: center; /*设置 logo 垂直居中 要与字体高度一致方可*/ line-height: 1.3rem; /*确保标题和logo在同一行*/ display: inline-block; /*标题与logo间距*/ margin-right: 0.2em; border-radius: 50%; width: 1.3rem; height: 1.3rem; color: var(--h-sign-aux); background: var(--h-sign-aux); } /* 表格设置 */ #write table { border-collapse: collapse; } #write table thead th{ background-color: var(--table-border-color); color: var(--color-context-background); } #write table th { background-color: var(--th-bg-color); } #write table th, td { text-align: center; padding: 0.5rem; } #write table td { border-left: 0.1rem solid var(--table-border-color); border-right: 0.1rem solid var(--table-border-color); } #write table tbody tr:nth-child(even) { background-color: var(--tr-bg-color); } #write table tbody tr:hover { background-color: var(--tr-hover-bg-color); color: var(--tr-bg-color); } /* 无序列表样式 */ #write ul li { list-style: none; -webkit-transition: .12s; transition: .12s; } #write ul li:hover { color: var(--selection-background-color); } /* 为了区分无序列表和任务列表特意加入了属性选择器 */ #write ul li[class=md-list-item]::before { position: absolute; content: '\\2022'; font-family: Arial; color: var(--selection-background-color); text-align: center; font-size: 2em; opacity: .5; line-height: .75; -webkit-transition: .5s; transition: .5s; } #write ul li:hover::before { -webkit-transform: scale(2); -ms-transform: scale(2); transform: scale(2); opacity: 1; text-shadow: 0 0 4px; -webkit-transition: .1s; transition: .1s; } /* 有序列表样式 */ #write ol li { } #write ol li:hover { color: var(--selection-background-color); } #write ol li::before { content: ''; } #write ol li:hover::before { -webkit-transform: none; -ms-transform: none; transform: none; background: var(--selection-background-color); } /* 任务列表设置 单选框设置 */ #write .task-list-item input[type = \"checkbox\"] { width: 0; height: 0; } /* 选中以前的边框样式 */ #write .task-list-item input[type = \"checkbox\"]::before, #write input[type = \"checkbox\"]:checked::before { content: \"\"; display: inline-block; vertical-align: middle; position: relative; margin-left: 4rem; left: -0.15rem; top: -0.41rem; width: 0.8rem; height: 0.8rem; border: 0.1rem solid var(--selection-background-color); border-radius: 50%; transition: all 0.2s; } /* 选中以前，鼠标悬浮于选中框时，选中框中间点的样式 */ #write .task-list-item input[type='checkbox']:hover::before { transition: all 0.2s; background-color: var(--selection-background-color); } /* 选中以后选中框中间点的样式 */ #write .task-list-item input[type = \"checkbox\"]:checked::before { padding: 0.1rem; background-clip: content-box; background-color: var(--selection-background-color); } /* 选中以后文本和选中线的样式 */ #write .task-list-item input[type = \"checkbox\"]:checked + p { text-decoration: line-through; color: var(--selection-background-color); } /* 引用 设置 */ #write blockquote { color: var(--reference-color); border-left: 0.25rem solid var(--split-color); border-right: 0.25rem solid var(--split-color); border-top: 0.25rem solid var(--split-color); border-bottom: 0.25rem solid var(--split-color); padding: 0.5rem 1rem 0.6rem 1rem; } #write blockquote::before { display: block; height: 2rem; width: 1.5rem; content: \"✎\"; font-size: 1.2rem; color: var(--selection-background-color); background: var(--selection-color); } /* 水平线设置 */ #write hr { margin-top: 2rem; margin-bottom: 2rem; background-color: var(--split-color); height: 0.13rem; border: 0; } #write p { font-size: 1rem; line-height: 1.6rem; margin-left: 4rem; } #write p:hover { /*color: var(--selection-background-color); font-size: 1.1rem;*/ } /* 代码块设置 */ #write .md-fences { font-family: var(--monospace-font); font-size: 1rem; padding: 0.6rem; background-color: var(--code-background-color); border-radius: 0.4rem; box-shadow: var(--block-shadow); } .md-fences { background-color: var(--code-background-color); } /* 行内代码块 */ code { background-color: var(--code-background-color); border-radius: 5px; padding: 16px; color: var(--code-color); } /* 公式设置 */ #write mjx-container { font-size: 1.1rem; } /* 它们是具有某些代码语言的特殊代码片段 */ #write pre[lang=’sequence’], #write pre[lang=’flow’], #write pre[lang=’mermaid’] { background-color: var(--code-background-color); border-radius: 0.4rem; box-shadow: var(--block-shadow); } /* inline codes settings */ #write code { font-family: var(--monospace-font); margin-left: 0.25rem; margin-right: 0.25rem; padding: 0.05rem 0.3rem; background-color: var(--code-background-color); border-radius: 0.4rem; box-shadow: 0.13rem 0.13rem 0.26rem var(--shadow-color); } /* urls settings */ #write a { color: var(--context-text-color); text-decoration: none; } #write a:hover { color: var(--a-hover-color); text-decoration: none; } #write a:before { /*标题左边logo中的文本*/ content: \"☁\"; text-align: center; /*设置 logo 垂直居中 要与字体高度一致方可*/ line-height: 1.6rem; /*确保标题和logo在同一行*/ display: inline-block; /*标题与logo间距*/ margin-right: 0.2em; width: 1.6rem; height: 1.6rem; color: var(--h-sign); } /* images settings */ #write img { display: block; margin: 0 auto; border: 0; border-radius: 5px; box-shadow: var(--block-shadow); } /* 高亮 == info == */ #write mark { background-color: var(--mark-color); } /* 被删除线修饰的文本样式 ~ ~ info ~ ~ */ #write del { color: var(--del-color); } /* 内容区选中后样式 */ #write ::selection { background-color: var(--selection-bg-color); } /* 自定义代码款下面选择高亮语法规则的样式 */ .code-tooltip { background-color: var(--code-background-color); color: var(--code-color); } /* 自定义滚动条样式 */ ::-webkit-scrollbar-thumb { background: var(--scrollbar-color); } ::-webkit-scrollbar-thumb:hover { background: var(--scrollbar-hover-color); } ::-webkit-scrollbar-thumb:active { background: var(--scrollbar-hover-color); }"},{"title":"我的第一篇博客","path":"/2023/04/02/关于我为什么开通博客/","content":"我第一次知道有博客这种东西应该是本科查资料的时候，经常就查到一些大佬自己建的网站，炫酷的页面，舒适的排版，当时就觉得建立博客是一件很酷的事。但那时候并没有想到要建立自己的网站。 其实我本科乃至以前都是不爱做笔记的，每次开学的时候我都信誓旦旦地买了好几本笔记本，下定决心要记上几本。然而有几点原因让我始终不能坚持下去：一来一开始写得工工整整，但后面逐渐潦草，消磨了我写笔记的耐心；二来整理笔记于我而言实在太浪费时间，我的记忆力还算可以的，上课听懂的东西再做整理我觉得不如多看看书做点练习；三来写笔记需要长期的坚持，我那时课业也多，没办法抽出额外的时间坚持(好吧~可能也是借口)。 说来也巧，大一的时候机缘巧合在CSDN注册了一个账号（账号名就是这个网站的名字“小林up”），原因是当时写作业要查资料就知道了这个平台，但是那时只是看没有自己写。 我真正开始有意识第记录博客是大二的时候，当时加入了学校的一个科创团队，韩队长教我们记录的重要性，他就经常在知乎上发布文章，记录他踩过的坑，构建自己的知识体系。在他的影响下，我也开始用电脑记录一些自己的东西，不过我的第一个平台还是前面提到的CSDN，还记得当时写的第一篇是关于MATLAB desolve函数的解读，但是当时我并没有养成写博客整理笔记的习惯。 真正让我迷上写博客的是大四的时候，真是后知后觉了哈哈，当时做的课程设计要设计PCB电路板，就把自己设计电路板踩过的坑给记录放在了CSDN，没想到以外收到了一波点赞和收藏，我突然感觉了一点成就感，很多自媒体的博主在他们视频的末尾都说：“你们的点赞和收藏就是对我最大的支持。”想来真是一点没错，于是大四的时候觉得能记录的就记录一下，没想到那年倒是写了100来篇。到现在已经破200篇了。我开始逐渐对写博客这件事形成了习惯。 读研究生的时候，在网上认识了好友小曦。小曦推荐我一本小说叫《众神世界》，虽然主角成长得很变态，但是不妨碍里面还是有很好的方法论。我很认可也很喜欢里面所说的费曼技巧的本质： 大家都以为，学习是看书，是记忆，是听讲，最多加上反复看或听，不，这只是学习的一部分，我把这部分命名为“输入”，也就是从外界吸收知识。我们做题，是不是由内而外利用知识？费曼技巧中的“教”，是不是也一种由内而外？这个过程，我称其为“输出”。学习的本质，就是输入加输出的过程，输入和输出构成完整的学习体系！ 我们在“输入”的时候，也就是听、看的时候，是“别人的东西”进入到我们的大脑里，我们如果不思考，不去动用那些“别人的东西”，为了节省精力，大脑会欺骗我们，让我们假装理解了。这样，仅仅是知道一个‘新名词’而已，离“理解”差十万八千里！当必须要输出的时候，我们的大脑会把需要的知识进行“整理”“挑选”“组合”“排列”“对比”“联系”等等一系列复杂的处理，如果我们输出不了，卡住了，是什么原因？没理解！只有理解了，才能输出。不理解怎么办？费曼技巧会让我们重新学习，重新理解。 虽然在CSDN上记录了很多，不过秉持着费曼技巧的思想，我觉得自己还是记录一些比较成体系的内容，况且倒腾一个个人博客也是能学会很多东西的，我在写博客的过程中也是丰富自己的认识，更体会到终身学习的重要性。 我希望，自己能做个持续输出、精进自己的长期主义者，可能更新不是很快，因为现在是研究生也有自己的日常工作，不过我还是尽量每周更新至少一篇吧。 于是啊于是，就有了你现在看到的这篇博客。"},{"title":"Hello World","path":"/2023/03/25/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}]